generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Player {
  id               Int                    @id @default(autoincrement())
  firstName        String
  lastName         String
  dateOfBirth      DateTime
  createdAt        DateTime               @default(now())
  updatedAt        DateTime               @updatedAt
  playerMatches    PlayerMatch[]
  playerCategories PlayerCategory[]
  categoryPoints   PlayerCategoryPoints[]
}

model MatchWeek {
  id        Int        @id @default(autoincrement())
  name      String
  matchDays MatchDay[]
}

model MatchDay {
  id          Int       @id @default(autoincrement())
  date        DateTime
  matchWeekId Int
  matchWeek   MatchWeek @relation(fields: [matchWeekId], references: [id])
  matches     Match[]
}

model Match {
  id         Int       @id @default(autoincrement())
  hour       DateTime
  court      Court
  type       Type
  result     String
  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])
  matchDay   MatchDay? @relation(fields: [matchDayId], references: [id])
  matchDayId Int?

  playerMatches PlayerMatch[]
}

model PlayerMatch {
  playerId Int
  matchId  Int
  winner   Boolean?
  team     Team
  player   Player  @relation(fields: [playerId], references: [id])
  match    Match   @relation(fields: [matchId], references: [id], onDelete: Cascade)

  @@id([playerId, matchId])
}

model Category {
  id               Int                    @id @default(autoincrement())
  name             String

  matches          Match[]
  playerCategories PlayerCategory[]
  categoryPoints   PlayerCategoryPoints[]
}

model PlayerCategory {
  playerId   Int
  categoryId Int
  player     Player   @relation(fields: [playerId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([playerId, categoryId])
}

model PlayerCategoryPoints {
  id         Int      @id @default(autoincrement())
  playerId   Int
  categoryId Int
  points     Int
  player     Player   @relation(fields: [playerId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])
}

enum Court {
  CANCHA_1
  CANCHA_2
  CANCHA_3
  CANCHA_4
}

enum Type {
  SINGLES
  DOUBLES
}

enum Team {
  EQUIPO_1
  EQUIPO_2
}
